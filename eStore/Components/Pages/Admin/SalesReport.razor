@page "/admin/sales-report"

@using BusinessObject.IService
@using DataAccess.Models
@inject IOrderService OrderService

<h3>Sales Report</h3>

<label>From Date:</label>
<input type="date" @bind="startDate" />

<label>To Date:</label>
<input type="date" @bind="endDate" />

<button @onclick="LoadOrders">Get Orders</button>

@if (orders is not null && orders.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Member ID</th>
                <th>Order Date</th>
                <th>Required Date</th>
                <th>Shipped Date</th>
                <th>Freight</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr>
                    <td>@order.OrderId</td>
                    <td>@order.MemberId</td>
                    <td>@order.OrderDate.ToShortDateString()</td>
                    <td>@order.RequiredDate.ToShortDateString()</td>
                    <td>@(order.ShippedDate?.ToShortDateString() ?? "N/A")</td>
                    <td>@(order.Freight?.ToString("C") ?? "N/A")</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No orders found in this date range.</p>
}

@code {
    private DateTime startDate = DateTime.Today.AddDays(-7);
    private DateTime endDate = DateTime.Today;
    private List<Order> orders = new();

    private async Task LoadOrders()
    {
        if (startDate > endDate)
        {
            Console.WriteLine("Invalid date range");
            return;
        }
        orders = await OrderService.GetOrdersByDateRangeAsync(startDate, endDate);
    }
}
