@page "/orderdetails/delete"
@using Microsoft.EntityFrameworkCore
@using DataAccess.Models
@using DataAccess.Context
@inject FptEStoreDbContext context
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>OrderDetail</h2>
    <hr />
    @if (orderdetail is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">UnitPrice</dt>
            <dd class="col-sm-10">@orderdetail.UnitPrice</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Quantity</dt>
            <dd class="col-sm-10">@orderdetail.Quantity</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Discount</dt>
            <dd class="col-sm-10">@orderdetail.Discount</dd>
        </dl>
        <EditForm method="post" Model="orderdetail" OnValidSubmit="DeleteOrderDetail" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(orderdetail is null)">Delete</button> |
            <a href="/orderdetails">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private OrderDetail? orderdetail;

    [SupplyParameterFromQuery]
    private int OrderId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        orderdetail = await context.OrderDetails.FirstOrDefaultAsync(m => m.OrderId == OrderId);
        if (orderdetail is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteOrderDetail()
    {
        context.OrderDetails.Remove(orderdetail!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/orderdetails");
    }
}
