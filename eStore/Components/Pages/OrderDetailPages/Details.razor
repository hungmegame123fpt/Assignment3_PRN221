@page "/orderdetails/details"
@using Microsoft.EntityFrameworkCore
@using DataAccess.Models
@using DataAccess.Context
@inject FptEStoreDbContext context
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>OrderDetail</h2>
    <hr />
    @if (orderdetail is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Order ID</dt>
            <dd class="col-sm-10">@orderdetail.OrderId</dd>
            <dt class="col-sm-2">Product ID</dt>
            <dd class="col-sm-10">@orderdetail.ProductId</dd>
            <dt class="col-sm-2">Product Name</dt>
            <dd class="col-sm-10">@orderdetail.Product?.ProductName</dd>
            <dt class="col-sm-2">Unit Price</dt>
            <dd class="col-sm-10">@orderdetail.UnitPrice.ToString("C")</dd>
            <dt class="col-sm-2">Quantity</dt>
            <dd class="col-sm-10">@orderdetail.Quantity</dd>
            <dt class="col-sm-2">Discount</dt>
            <dd class="col-sm-10">@orderdetail.Discount.ToString("P")</dd>

            <dt class="col-sm-2 mt-4">Order Information</dt>
            <dd class="col-sm-10 mt-4"></dd>
            <dt class="col-sm-2">Order Date</dt>
            <dd class="col-sm-10">@orderdetail.Order?.OrderDate.ToString("dd/MM/yyyy")</dd>
            <dt class="col-sm-2">Required Date</dt>
            <dd class="col-sm-10">@orderdetail.Order?.RequiredDate.ToString("dd/MM/yyyy")</dd>
            <dt class="col-sm-2">Shipped Date</dt>
            <dd class="col-sm-10">@(orderdetail.Order?.ShippedDate?.ToString("dd/MM/yyyy") ?? "Not shipped")</dd>
            <dt class="col-sm-2">Freight</dt>
            <dd class="col-sm-10">@(orderdetail.Order?.Freight?.ToString("C") ?? "N/A")</dd>
        </dl>
        <div>
            <a href="@($"/orderdetails/edit?orderid={orderdetail.OrderId}")">Edit</a> |
            <a href="@($"/orderdetails")">Back to List</a>
        </div>
    }
</div>

@code {
    private OrderDetail? orderdetail;

    [SupplyParameterFromQuery]
    private int OrderId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        orderdetail = await context.OrderDetails
            .Include(od => od.Order)
            .Include(od => od.Product)
            .FirstOrDefaultAsync(m => m.OrderId == OrderId);

        if (orderdetail is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
